<%-include('../layouts/header')%>



<section class="h-100 h-custom" >
  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-12">
        <div class="card card-registration card-registration-2" style="border-radius: 15px; border: 1px solid black;">
          <div class="card-body p-0">
            <div class="row g-0">
              <div class="col-lg-12">
                <div class="p-5">
                  <div class="d-flex justify-content-between align-items-center mb-5">
                    <h1 class="fw-bold mb-0 text-black">Orders</h1>
                    <h6 class="mb-0 text-muted">
                      <%= data.length %>
                    </h6>
                  </div>
                  <hr class="my-4">
                  <% data.forEach(function(order, index) { %>
                  <h6 class="fw-bold text-danger">Order <%= index + 1+((currentPage-1)*2) %>:</h6>
                  <p class="text-success">Bill amount: ₹<%= order.orderBill %> /-</p>
                  <% order.items.forEach(function(item) { %>
                  <div class="row d-flex justify-content-between align-items-center">
                    <div class="col-md-2 col-lg-2 col-xl-2">
                      <img src="/images/<%= item.img1 %>" class="img-fluid rounded-3" alt="Cotton T-shirt">
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-3">
                      <h6 class="text-muted"><%= item.category %></h6>
                      <a href="/productView?id=<%= item.productId %>" style="text-decoration: none">
                        <h6 class="text-black mb-0"><%= item.productName %></h6>
                      </a>
                      <a class="generatePDF " data-order-id="<%= order._id %>" data-item-id="<%= item._id %>" style="text-decoration: none;font-weight:700;font-size: 20px;">Invoice</a>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-1">
                      <h6 class="text-muted">Size</h6>
                      <h6><%= item.size %></h6>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-1 d-flex">
                      <h6><%= item.quantity %> Nos</h6>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-1 d-flex">
                      <h6 class="mb-0 itemPrice" id="price" value="">₹<%= item.price %> /-</h6>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-1 d-flex">
                      <h6 class="mb-0 " id="mop" value=""><%= order.paymentMode %> </h6>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-1 d-flex">
                      <h6>Order <%= item.orderStatus %></h6>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-1 d-flex ">
                      <% if (item.orderStatus === 'Cancelled') { %>
                      <h6>
                        <button type="button" disabled class="btn btn-secondary border-dark">Cancelled</button>
                      </h6>
                      <% } else if (item.orderStatus === 'Processed') { %>
                      <a>
                        <button onclick="Cancel('<%= item._id %>','<%= order.paymentMode %>','<%= item.quantity * item.price %>')" type="button" class="btn btn-danger border-dark">Cancel</button>
                      </a>
                      <% } else if(item.orderStatus === 'Delivered'){ %>
                      
                        
                        <h6>
                          <a onclick="returnOrder('<%= item._id %>')" data-bs-toggle="modal" data-bs-target="#returnBut" class="btn btn-red border-dark">Return</a>
                        </h6>

                        <!-- ==========================================modal========================= -->
                        <div class="modal fade" id="returnBut" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                          <div class="modal-dialog">
                            <div class="modal-content">
                              <div class="modal-header">
                                <h5 class="modal-title" id="staticBackdropLabel">Return</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                              </div>
                              <div class="modal-body">
                                Are you sure you want to Return this product 
                                <input type="hidden" id="itemID">
                              </div>
                              <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button class="btn btn-danger mt-1 mb-1" onclick='return confirmReturn()' id="block-Button">Refund to Wallet</button>
                              </div>
                            </div>
                          </div>
                        </div>
                        <!-- ========================================================================= -->
                      </form>
                     
                      <% }else if (item.orderStatus === 'Return initiated') { %>
                      <h6>
                        <button type="submit" disabled class="btn btn-secondary border-dark">Pending for Approval</button>
                      </h6>
                      <% }else if (item.orderStatus === 'Returned'){%>
                        <h6>
                          <button type="submit" disabled class="btn btn-secondary border-dark">Returned</button>
                        </h6>
                        <% } %>

                    </div>
                    <% if(item.orderStatus === 'Return initiated' || item.orderStatus === 'Returned' || item.orderStatus === 'Delivered'){ %>
                    <div>
                      <h6>
                        <a onclick="rateProduct('<%=item.productId  %>')"  class="btn btn-green border-dark my-3">Rate the products</a>
                    </div>
                    <%}%>
                  </div>
                  <% }); %>
                  <hr class="text-primary">
                  <% }); %>
                  <div class="pt-5">
                    <h6 class="mb-0"><a href="/profile" class="text-body"><i class="fas fa-long-arrow-alt-left me-2"></i>Back to Profile</a></h6>
                  </div>
                 <!-- Add navigation controls for pagination -->
                 <div class="text-center mt-5">
                   <nav aria-label="Order Pagination">
                     <ul class="pagination justify-content-center">
                       <% for (let i = 1; i <= totalPages; i++) { %>
                       <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                         <a class="page-link" href="/orders?page=<%= i %>"><%= i %></a>
                       </li>
                       <% } %>
                     </ul>
                   </nav>
                 </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>





<%-include('../layouts/footer')%>
<script src="https://cdn.jsdelivr.net/npm/easyinvoice/dist/easyinvoice.min.js"></script>
<script>
  // Add JavaScript to handle the AJAX request and PDF generation
  document.querySelectorAll('.generatePDF').forEach(function(button) {
    button.addEventListener('click', function() {

      const orderId = this.getAttribute('data-order-id');
      const itemId = this.getAttribute('data-item-id');
      console.log("orderId :", orderId);
      console.log("itemId :", itemId);
      // Send an AJAX request to the server to get invoice data
      fetch(`/createinvoice?order_id=${orderId}&item_id=${itemId}`)
        .then(response => response.json())
        .then(data => {
          console.log("response reached back");
          console.log(data);

          easyinvoice.createInvoice(data, function(result) {
            // The response will contain a base64 encoded PDF file
           
            easyinvoice.download('myInvoice.pdf', result.pdf);

          });
        })
        .catch(error => {
          console.error('Error fetching invoice data:', error);
        });
    })
  });
</script>
<script>
  function returnOrder(data) {
    document.getElementById('itemID').value = data
  }

  function confirmReturn() {
    const id = document.getElementById("itemID").value
    console.log(id)
    fetch(`/returnOrder/${id}`, {
        method: "PATCH",
      })
      .then(response => {
        $('#returnBut').modal('hide')

      })

      .then(data => {
        location.reload()
      })
      .catch(error => {
        console.log(error);
      });
  };
</script>




<script>
  function Cancel(data, MOPay, refundAmount) {
    console.log("cancel working");
    const id = data;
    const MOP = MOPay
    const refund = refundAmount
    if (MOP == "COD" || MOP == "wallet") {
      Swal.fire({
        title: 'Are you sure?',
        text: "You want to cancel this product from Orders!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonText: 'No, keep it',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch("/cancelOrder", {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify({
                id: id,
                mop: MOP,
                refund: refund
              })
            })
            .then(response => {
              return response.json();
            })
            .then(data => {
              Swal.fire(
                'Cancelled!',
                'Your Order has been cancelled.',
                'success'
              )
            })
            .catch(error => {
              console.log(error);
            });
          location.reload();
        }

      })
    } else if (MOP == "razorpay") {
      Swal.fire({
        title: 'Are you sure?',
        text: "You want to cancel this product from Orders! ",
        icon: 'warning',
        showCancelButton: true,
        showDenyButton: true,
        confirmButtonColor: '#e00041',
        cancelButtonText: 'Dont cancel',
        cancelButtonColor: '#00964e',
        denyButtonColor: '#e00041',
        denyButtonText: `Refund to Account`,
        confirmButtonText: 'Refund to Wallet'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch("/cancelOrder", {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify({
                id: id,
                refundOption: 'wallet',
                mop: MOP,
                refund: refund
              })
            })
            .then(response => {
              return response.json();
            })
            .then(data => {
              Swal.fire(
                'Cancelled!',
                'Your Order has been cancelled.',
                'success'
              )
            })
            .catch(error => {
              console.log(error);
            });
          location.reload();
        } else if (result.isDenied) {
          fetch("/cancelOrder", {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify({
                id: id,
                refundOption: 'account',
                mop: MOP,
                refund: refund
              })
            })
            .then(response => {
              return response.json();
            })
            .then(data => {
              Swal.fire(
                'Cancelled!',
                'Your Order has been cancelled.',
                'success'
              )
            })
            .catch(error => {
              console.log(error);
            });
          location.reload();
        }

      })

    }


  }
</script>


